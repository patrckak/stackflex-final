// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  public_id    String   @id @map("_id") // CPF
  id           String   @unique @default(cuid())
  firstname    String
  lastname     String
  email        String
  verification String?
  password     String
  cep          String
  cidade       String
  endereco     String
  avatar       String   @default("https://utfs.io/f/SHkctA3zZK7UNJJh7RPsirWFqgMZSXO8ta0lynz9TEYoj2Hv")
  cnpj         String?  @default("0")
  razao        String?
  createdAt    DateTime @default(now())

  Account      Account[]
  Funcionarios Funcionarios[]
  Client       Client[]
  Estimates    Estimates[]
}

model Account {
  id            String  @id @map("_id")
  theme         String  @default("sys") // sys = system pref | drk = dark theme | lgt = light theme
  usePDV        Boolean @default(false) // Ponto de Venda
  useStock      Boolean @default(false) // Gestão de estoque
  useFinance    Boolean @default(false) // Gestão Financeira
  useWhatsapp   Boolean @default(false) // Integração com Whatsapp
  useChild      Boolean @default(false) // Criação de contas "filhas"
  isVerificated Boolean @default(false) // se o email é verificado ou não
  costs         Float   @default(0)
  earnings      Float   @default(0)
  plan          Int     @default(0) // 0 free 1 basic 2 custom
  relation      User    @relation(fields: [id], references: [id])
}

model Funcionarios {
  id    String  @id @map("_id")
  nome  String
  role  Int     @default(1) // 1 ~ 5 | apenas visualização ~ todas permissões
  email String? @unique
  cpf   String? @unique

  relation2 User @relation(fields: [id], references: [id])
}

model Estimates {
  // Orçamentos
  estimateId     String   @id @default(cuid()) @map("_id")
  id             String
  clientId       String
  clientAddress  String?
  clientNumber   String?
  clientCadastro String?
  description    String?
  date           String?  @default("2000-01-01")
  key            Int      @default(0) // chave de acesso do orçamento
  status         String   @default("Aguardando Aprovação")
  createdAt      DateTime @default(now())
  items          String?
  value          Float    @default(0)
  descont        Int?     @default(0)

  r4 User @relation(fields: [id], references: [id])

  @@index([id])
}

model Client {
  clientId String  @id @default(cuid()) @map("_id")
  id       String
  name     String
  hasDebt  Boolean @default(false)
  cadastro String?
  address  String?
  contact  String?

  r3 User @relation(fields: [id], references: [id])

  @@index([id])
}
