// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  public_id     String         @id @unique // CPF
  id            String         @unique @default(cuid())
  firstname     String
  lastname      String
  email         String
  verification  String?
  isVerificated Boolean        @default(false) // se o email é verificado ou não
  password      String
  LastModify    DateTime       @updatedAt
  cep           String
  cidade        String
  endereco      String
  avatar        String         @default("https://utfs.io/f/SHkctA3zZK7UNJJh7RPsirWFqgMZSXO8ta0lynz9TEYoj2Hv")
  cnpj          String?        @default("0")
  razao         String?
  Account       Account[]
  Funcionarios  Funcionarios[]
  Client        Client[]
  Estimates     Estimates[]
}

model Account {
  id              String  @id
  theme           String  @default("sys") // sys = system pref | drk = dark theme | lgt = light theme
  usePDV          Boolean @default(false) // Ponto de Venda
  useStock        Boolean @default(false) // Gestão de estoque
  useFinance      Boolean @default(false) // Gestão Financeira
  useWhatsapp     Boolean @default(false) // Integração com Whatsapp
  useChild        Boolean @default(false) // Criação de contas "filhas"
  earnings        Int     @default(0)
  monthlyEarnings Int     @default(0)
  plan            Int     @default(0) // 0 free 1 basic 2 custom
  relation        User    @relation(fields: [id], references: [id])
}

model Funcionarios {
  id    String  @id
  email String? @unique
  cpf   String? @unique

  relation2 User @relation(fields: [id], references: [id])
}

model Estimates {
  // Orçamentos
  estimateId String   @id @default(cuid())
  id         String
  clientId   String
  desc       String?
  date       String?
  status     String   @default("Aguardando Aprovação")
  createdAt  DateTime @default(now())
  items      String?
  value      Int      @default(0)
  descont    Int?     @default(0)

  r4 User @relation(fields: [id], references: [id])

  @@index([id])
}

model Client {
  id      String  @id @unique @default(cuid())
  userId  String  @unique
  address String?
  contact String?

  r3 User @relation(fields: [userId], references: [id])

  @@index([userId])
}
